@using Jeebs.Extensions
@model Jeebs.Mvc.Auth.Models.SignInModel

@{
	ArgumentNullException.ThrowIfNull(Model);
	
	var emailName = Html.NameFor(x => x.Email);
	var emailId = emailName.Normalise();

	var passwordName = Html.NameFor(x => x.Password);
	var passwordId = passwordName.Normalise();

	var rememberName = Html.NameFor(x => x.RememberMe);
	var rememberId = rememberName.Normalise();
}

<form method="post" action="@Url.Action("SignIn", "Auth", new { returnUrl = Model.ReturnUrl })">

	<!-- Alerts -->
	<alerts />

	<!-- Sign In details -->
	<div class="row mb-3">
		<label class="form-label col-sm-4" for="@emailId">Email address</label>
		<input type="email"
			   class="form-control col-sm-8"
			   name="@emailName"
			   id="@emailId"
			   placeholder="Please enter your email address"
			   required />
		<div class="invalid-feedback">Please enter a valid email address.</div>
	</div>
	<div class="row mb-3">
		<label class="form-label col-sm-4" for="@passwordId">Password</label>
		<input type="password"
			   class="form-control col-sm-8"
			   id="@passwordId"
			   name="@passwordName"
			   placeholder="Please enter your password."
			   required />
		<div class="invalid-feedback">Please enter your password.</div>
	</div>
	<div class="row mb-3">
		<input type="checkbox"
			   class="form-check-input"
			   name="@rememberName"
			   id="@rememberId" />
		<label class="form-label" for="@rememberId">Keep me signed in</label>
	</div>

	<!-- Hidden values -->
	@Html.AntiForgeryToken()
	@Html.HiddenFor(x => x.ReturnUrl)

	<!-- Submit -->
	<div class="d-flex justify-content-end">
		<button type="submit" class="btn btn-primary">Sign In</button>
	</div>

</form>
