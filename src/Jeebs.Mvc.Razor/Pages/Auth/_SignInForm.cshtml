@using Jeebs.Extensions
@model Jeebs.Mvc.Auth.Models.SignInModel

@{
	ArgumentNullException.ThrowIfNull(Model);

	var emailName = Html.NameFor(x => x.Email);
	var emailId = emailName.Normalise();

	var passwordName = Html.NameFor(x => x.Password);
	var passwordId = passwordName.Normalise();

	var rememberName = Html.NameFor(x => x.RememberMe);
	var rememberId = rememberName.Normalise();
}

<form class="needs-validation" method="post" action="@Url.Page("/Auth/SignIn", "Form")" novalidate>

	<div class="row mb-3">
		<div class="col-sm-4">
			<label class="form-label" for="@emailId">Email address</label>
		</div>
		<div class="col-sm-8">
			<input type="email"
				   class="form-control"
				   name="@emailName"
				   id="@emailId"
				   placeholder="Please enter your email address"
				   required />
			<div class="invalid-feedback">Please enter a valid email address.</div>
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-sm-4">
			<label class="form-label" for="@passwordId">Password</label>
		</div>
		<div class="col-sm-8">
			<input type="password"
				   class="form-control"
				   id="@passwordId"
				   name="@passwordName"
				   placeholder="Please enter your password."
				   required />
			<div class="invalid-feedback">Please enter your password.</div>
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-sm-4"></div>
		<div class="col-sm-8">
			<input type="checkbox"
				   class="form-check-input me-2"
				   name="@rememberName"
				   id="@rememberId" />
			<label class="form-label" for="@rememberId">Keep me signed in</label>
		</div>
	</div>

	@Html.AntiForgeryToken()

	<div class="d-flex justify-content-end">
		<button type="submit" class="btn btn-primary">Sign In</button>
	</div>

</form>
