{
	"$schema": "https://json-schema.org/draft-07/schema",
	"id": "https://raw.githubusercontent.com/bfren/jeebs/main/Libraries/Jeebs.Config/schema.json",
	"title": "Jeebs Libraries Configuration Settings",
	"type": "object",
	"required": [ "jeebs" ],
	"properties": {
		"jeebs": {
			"type": "object",
			"description": "Jeebs configuration",
			"required": [ "app" ],
			"additionalProperties": false,
			"properties": {
				"app": {
					"type": "object",
					"description": "Application information",
					"required": [ "name" ],
					"additionalProperties": false,
					"properties": {
						"name": {
							"type": "string",
							"description": "Application name"
						},
						"suite": {
							"type": "string",
							"description": "[Optional] The name of the application suite"
						},
						"version": {
							"type": "string",
							"pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$",
							"description": "[Optional] Application version (format 0.0.0.0)"
						}
					}
				},
				"azure": {
					"type": "object",
					"description": "Azure configuration",
					"additionalProperties": false,
					"properties": {
						"dataProtection": {
							"type": "object",
							"description": "Azure Data Protection configuration",
							"required": [ "storageAccessKeyConnectionString", "containerName", "keyUri" ],
							"additionalProperties": false,
							"properties": {
								"storageAccessKeyConnectionString": {
									"type": "string",
									"description": "Storage Access Key connection string"
								},
								"containerName": {
									"type": "string",
									"description": "Blob Container name"
								},
								"blobName": {
									"type": "string",
									"description": "Blob name (e.g. keys.xml)",
									"default": "keys.xml"
								},
								"keyUri": {
									"type": "string",
									"description": "URI to Key Vault key to use for data encryption"
								}
							}
						},
						"keyVault": {
							"type": "object",
							"description": "Azure Key Vault configuration",
							"required": [ "tenantId", "clientId", "clientSecret", "name" ],
							"additionalProperties": false,
							"properties": {
								"tenantId": {
									"type": "string",
									"pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
									"description": "Tenant / Directory ID (see Azure Key Vault authentication documentation"
								},
								"clientId": {
									"type": "string",
									"pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
									"description": "Client ID (see Azure Key Vault authentication documentation"
								},
								"clientSecret": {
									"type": "string",
									"description": "Client Secret (see Azure Key Vault authentication documentation"
								},
								"name": {
									"type": "string",
									"description": "Key Vault identifier"
								}
							}
						}
					}
				},
				"db": {
					"type": "object",
					"description": "Database connection configuration",
					"required": [ "connections", "default" ],
					"additionalProperties": false,
					"properties": {
						"authentication": {
							"type": "string",
							"default": "[Optional] The connection to use for authentication - must be one of the connections defined in 'connections'"
						},
						"connections": {
							"type": "object",
							"description": "Named database connections",
							"additionalProperties": {
								"$ref": "#/definitions/db/connection"
							}
						},
						"default": {
							"type": "string",
							"description": "The default connection - must be one of the connections defined in 'connections'"
						}
					}
				},
				"logging": {
					"type": "object",
					"description": "Logging configuration",
					"required": [ "minimum" ],
					"additionalProperties": false,
					"properties": {
						"minimum": {
							"$ref": "#/definitions/logging/level"
						},
						"providers": {
							"type": "object",
							"description": "[Optional] Logging providers - name should be in format service_type.service_name (e.g. seq.dev-server)",
							"additionalProperties": {
								"$ref": "#/definitions/logging/provider"
							}
						}
					}
				},
				"services": {
					"type": "object",
					"description": "Third-party services configuration",
					"additionalProperties": false,
					"properties": {
						"console": {
							"type": "object",
							"description": "Console configuration",
							"additionalProperties": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"template": {
										"type": "string",
										"description": "[Optional] Override the default console output template"
									},
									"addPrefix": {
										"type": "boolean",
										"description": "[Optional] Whether or not to add a prefix to console messages (to help them stand out!)",
										"default": true
									}
								}
							}
						},
						"seq": {
							"type": "object",
							"description": "Seq configuration",
							"additionalProperties": {
								"type": "object",
								"required": [ "apiKey", "server" ],
								"additionalProperties": false,
								"properties": {
									"server": {
										"type": "string",
										"description": "Ingest server (don't forget the port)"
									},
									"apiKey": {
										"type": "string",
										"description": "API Key for accessing the server"
									}
								}
							}
						},
						"slack": {
							"type": "object",
							"description": "Slack configuration",
							"additionalProperties": {
								"type": "object",
								"required": [ "webhook" ],
								"additionalProperties": false,
								"properties": {
									"webhook": {
										"type": "string",
										"description": "Webhooks can be created through Slack 'Incoming Webhooks' oage"
									},
									"showAttachments": {
										"type": "boolean",
										"description": "[Optional] Whether or not to show attachments"
									}
								}
							}
						}
					}
				},
				"web": {
					"type": "object",
					"description": "Web Application configuration",
					"additionalProperties": false,
					"properties": {
						"auth": {
							"type": "object",
							"description": "Authorisation configuration",
							"required": [ "enabled", "scheme" ],
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"type": "boolean",
									"default": "Whether or not authentication and authorisation are enabled"
								},
								"scheme": {
									"type": "string",
									"description": "The authentication scheme to use",
									"enum": [ "cookies", "jwt" ]
								},
								"loginPath": {
									"type": "string",
									"description": "[Optional] Path to the login page",
									"default": "/auth/signin"
								},
								"accessDeniedPath": {
									"type": "string",
									"description": "[Optional] Path to the access denied page",
									"default": "/auth/denied"
								},
								"jwt": {
									"type": "object",
									"description": "JWT configuration",
									"required": [ "signingKey", "issuer", "audience" ],
									"additionalProperties": false,
									"properties": {
										"signingKey": {
											"type": "string",
											"description": "JWT Signing Key",
											"minLength": 32
										},
										"encryptingKey": {
											"type": "string",
											"description": "[Optional] JWT Encrypting Key",
											"minLength": 64
										},
										"issuer": {
											"type": "string",
											"description": "URL of application issuing this token"
										},
										"audience": {
											"type": "string",
											"description": "URL of application using this token"
										},
										"validForHours": {
											"type": "integer",
											"description": "[Optional] The number of hours for which issued tokens will be valid",
											"default": 1
										}
									}
								}
							}
						},
						"redirections": {
							"type": "object",
							"description": "Redirections - key is URL to match, value is URL to redirect to (both MUST start with a slash)",
							"additionalProperties": {
								"type": "string",
								"pattern": "^\\/.*$",
								"description": "URL to redirect to"
							}
						},
						"verification": {
							"type": "object",
							"description": "Search engine verification codes",
							"additionalProperties": false,
							"properties": {
								"google": {
									"type": "string",
									"pattern": "^(?!^google)[0-9a-z]{16}$",
									"description": "Google Webmaster Tools verification code (without the 'google' prefix)"
								}
							}
						}
					}
				},
				"wp": {
					"type": "object",
					"description": "WordPress instances",
					"additionalProperties": {
						"$ref": "#/definitions/wp/instance"
					}
				}
			}
		}
	},
	"definitions": {
		"db": {
			"connection": {
				"type": "object",
				"description": "Database connection configuration",
				"required": [ "connectionString" ],
				"additionalProperties": false,
				"properties": {
					"connectionString": {
						"type": "string",
						"description": "Connection string"
					},
					"tablePrefix": {
						"type": "string",
						"description": "[Optional] Table prefix"
					},
					"additionalProperties": {
						"type": "object",
						"description": "[Optional] Additional properties required by this connection (key/value pairs)"
					}
				}
			}
		},
		"logging": {
			"level": {
				"type": "string",
				"description": "Microsoft compatible logging levels",
				"enum": [ "Verbose", "Debug", "Information", "Warning", "Error", "Fatal" ]
			},
			"provider": {
				"type": "object",
				"default": "Logging provider",
				"required": [ "enabled" ],
				"additionalProperties": false,
				"properties": {
					"enabled": {
						"type": "boolean",
						"description": "Whether or not this provider is enabled"
					},
					"minimum": {
						"$ref": "#/definitions/logging/level"
					}
				}
			}
		},
		"wp": {
			"instance": {
				"type": "object",
				"description": "WordPress instance configuration",
				"required": [ "tablePrefix" ],
				"additionalProperties": false,
				"properties": {
					"db": {
						"type": "string",
						"description": "[Optional] The connection to use for this instance - must be one of the connections defined in 'connections'"
					},
					"tablePrefix": {
						"type": "string",
						"description": "Table prefix"
					},
					"uploadsUrl": {
						"type": "string",
						"description": "The URL of the 'uploads' directory for the WordPress instance (e.g. https://host/wp-content/uploads)"
					},
					"uploadsPath": {
						"type": "string",
						"description": "The file system path of the 'uploads' directory (e.g. /var/www/html/wp-content/uploads)"
					},
					"virtualUploadsUrl": {
						"type": "string",
						"description": "Virtual URL of the 'uploads' directory (used with 'uploadsUrl' to hide location of WordPress instance)"
					}
				}
			}
		}
	}
}
